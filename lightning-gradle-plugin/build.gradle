group = 'uk.co.deliverymind'
version = lightningGradlePluginVersion

apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'java-gradle-plugin'
apply plugin: 'signing'

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integrationTest/java')
        }
        resources.srcDir file('src/integrationTest/resources')
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }

    useTestNG()

    doFirst {
        println "\nIf you execute this task for first time, it may take a good while to run. This is because our tests cover compatibility with different Gradle versions, which may need to be downloaded first. However, this will be handled automatically for you and will happen only once.\n"
    }
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test

tasks.withType(Test) {
    reports.html.destination = file("${reporting.baseDir}/${name}")
}

dependencies {
    compile "uk.co.deliverymind:lightning-core:${lightningCoreVersion}"
    integrationTestCompile 'org.testng:testng:6.10'
}

repositories {
    mavenCentral()
    mavenLocal()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId group
            artifactId 'lightning-gradle-plugin'
            version lightningGradlePluginVersion

            from components.java
        }
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                group group
                name 'lightning-gradle-plugin'
                version lightningGradlePluginVersion
                packaging 'jar'
                description 'Gradle plugin encapsulating Lightning functionality'
                url 'http://deliverymind.github.io/lightning'

                scm {
                    connection 'scm:git:git@github.com:deliverymind/lightning.git'
                    developerConnection 'scm:git:git@github.com:deliverymind/lightning.git'
                    url 'git@github.com:deliverymind/lightning.git'
                }

                licenses {
                    license {
                        name 'MIT License'
                        url 'http://www.opensource.org/licenses/mit-license.php'
                    }
                }

                developers {
                    developer {
                        name 'Irek Pastusiak'
                        email 'irek@deliverymind.co.uk'
                        organizationUrl 'https://github.com/deliverymind'
                    }
                }
            }
        }
    }
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}